/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE EXPLORATION_RETURN_POSITION PACKING
package com.MAVLink.ras_a;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * Provides the return-from-exploration position when an exploration is completed (e.g. volume set by the exploration boundaries does not have new open areas for
        the vehicle to explore) or canceled (e.g. the operator stops the exploration task and requests the vehicle to leave the defined exploration area).
        Can either be set by the vehicle's onboard autonomy engine or set by the user MAV_CMD_SET_EXPLORATION_RETURN_POS.
        A MAV_CMD_NAV_EXPLORATION_RETURN can be used to send the vehicle to the position defined by this message.
        This message can be requested by sending the MAV_CMD_REQUEST_MESSAGE command.
      
 */
public class msg_exploration_return_position extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION = 51102;
    public static final int MAVLINK_MSG_LENGTH = 44;
    private static final long serialVersionUID = MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION;

    
    /**
     * Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.
     */
    @Description("Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.")
    @Units("us")
    public long time_usec;
    
    /**
     * Latitude (WGS84). INT32_MAX when unknown.
     */
    @Description("Latitude (WGS84). INT32_MAX when unknown.")
    @Units("degE7")
    public int latitude;
    
    /**
     * Longitude (WGS84). INT32_MAX when unknown.
     */
    @Description("Longitude (WGS84). INT32_MAX when unknown.")
    @Units("degE7")
    public int longitude;
    
    /**
     * Altitude (MSL). Positive for up. Note that virtually all GPS modules provide both WGS84 and MSL. INT32_MAX when unknown.
     */
    @Description("Altitude (MSL). Positive for up. Note that virtually all GPS modules provide both WGS84 and MSL. INT32_MAX when unknown.")
    @Units("mm")
    public int altitude;
    
    /**
     * Altitude above ground. INT32_MAX when unknown.
     */
    @Description("Altitude above ground. INT32_MAX when unknown.")
    @Units("mm")
    public int relative_alt;
    
    /**
     * Altitude relative to WGS84 geoid. INT32_MAX when unknown.
     */
    @Description("Altitude relative to WGS84 geoid. INT32_MAX when unknown.")
    @Units("mm")
    public int geoid_alt;
    
    /**
     * Local X position of this position in the local coordinate NED frame. NaN when unknown.
     */
    @Description("Local X position of this position in the local coordinate NED frame. NaN when unknown.")
    @Units("m")
    public float x;
    
    /**
     * Local Y position of this position in the local coordinate NED frame. NaN when unknown.
     */
    @Description("Local Y position of this position in the local coordinate NED frame. NaN when unknown.")
    @Units("m")
    public float y;
    
    /**
     * Local Z position of this position in the local coordinate NED frame. NaN when unknown.
     */
    @Description("Local Z position of this position in the local coordinate NED frame. NaN when unknown.")
    @Units("m")
    public float z;
    
    /**
     * World to surface heading transformation of the return-from-exploration position. Used to indicate the heading with respect to the ground. NaN when unknown.
     */
    @Description("World to surface heading transformation of the return-from-exploration position. Used to indicate the heading with respect to the ground. NaN when unknown.")
    @Units("rad")
    public float yaw;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION;

        packet.payload.putUnsignedLong(time_usec);
        packet.payload.putInt(latitude);
        packet.payload.putInt(longitude);
        packet.payload.putInt(altitude);
        packet.payload.putInt(relative_alt);
        packet.payload.putInt(geoid_alt);
        packet.payload.putFloat(x);
        packet.payload.putFloat(y);
        packet.payload.putFloat(z);
        packet.payload.putFloat(yaw);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a exploration_return_position message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.time_usec = payload.getUnsignedLong();
        this.latitude = payload.getInt();
        this.longitude = payload.getInt();
        this.altitude = payload.getInt();
        this.relative_alt = payload.getInt();
        this.geoid_alt = payload.getInt();
        this.x = payload.getFloat();
        this.y = payload.getFloat();
        this.z = payload.getFloat();
        this.yaw = payload.getFloat();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_exploration_return_position() {
        this.msgid = MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_exploration_return_position( long time_usec, int latitude, int longitude, int altitude, int relative_alt, int geoid_alt, float x, float y, float z, float yaw) {
        this.msgid = MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION;

        this.time_usec = time_usec;
        this.latitude = latitude;
        this.longitude = longitude;
        this.altitude = altitude;
        this.relative_alt = relative_alt;
        this.geoid_alt = geoid_alt;
        this.x = x;
        this.y = y;
        this.z = z;
        this.yaw = yaw;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_exploration_return_position( long time_usec, int latitude, int longitude, int altitude, int relative_alt, int geoid_alt, float x, float y, float z, float yaw, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.time_usec = time_usec;
        this.latitude = latitude;
        this.longitude = longitude;
        this.altitude = altitude;
        this.relative_alt = relative_alt;
        this.geoid_alt = geoid_alt;
        this.x = x;
        this.y = y;
        this.z = z;
        this.yaw = yaw;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_exploration_return_position(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                        
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION - sysid:"+sysid+" compid:"+compid+" time_usec:"+time_usec+" latitude:"+latitude+" longitude:"+longitude+" altitude:"+altitude+" relative_alt:"+relative_alt+" geoid_alt:"+geoid_alt+" x:"+x+" y:"+y+" z:"+z+" yaw:"+yaw+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_EXPLORATION_RETURN_POSITION";
    }
}
        